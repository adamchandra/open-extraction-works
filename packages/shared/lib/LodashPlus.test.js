/* tslint:disable: no-console */
import { sortedUniqCountBy } from './LodashPlus';
import * as _ from 'lodash';
describe("Sorted Uniq Counting", () => {
  it("should count/uniq by identity", () => {
    const examples = [{
      example: [0, 1, 2],
      expect: [[0, 1], [1, 1], [2, 1]]
    }, {
      example: "aabbc".split(""),
      expect: [["a", 2], ["b", 2], ["c", 1]]
    }];

    _.each(examples, e => {
      const res = sortedUniqCountBy(e.example);
      expect(res).toEqual(e.expect);
      console.log(res);
    });
  });
  it("should count/uniq by custom function", () => {
    const examples = [{
      example: [1.1, 1.2, 2.3, 2.4],
      expect: [[1.1, 2], [2.3, 2]],
      f: Math.floor
    }];

    _.each(examples, e => {
      const res = sortedUniqCountBy(e.example, e.f);
      expect(res).toEqual(e.expect);
      console.log(res);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Mb2Rhc2hQbHVzLnRlc3QudHMiXSwibmFtZXMiOlsic29ydGVkVW5pcUNvdW50QnkiLCJfIiwiZGVzY3JpYmUiLCJpdCIsImV4YW1wbGVzIiwiZXhhbXBsZSIsImV4cGVjdCIsInNwbGl0IiwiZWFjaCIsImUiLCJyZXMiLCJ0b0VxdWFsIiwiY29uc29sZSIsImxvZyIsImYiLCJNYXRoIiwiZmxvb3IiXSwibWFwcGluZ3MiOiJBQUNBO0FBRUEsU0FBU0EsaUJBQVQsUUFBa0MsY0FBbEM7QUFDQSxPQUFPLEtBQUtDLENBQVosTUFBbUIsUUFBbkI7QUFFQUMsUUFBUSxDQUFDLHNCQUFELEVBQXlCLE1BQU07QUFFbkNDLEVBQUFBLEVBQUUsQ0FBQywrQkFBRCxFQUFrQyxNQUFNO0FBQ3RDLFVBQU1DLFFBQWlFLEdBQUcsQ0FDdEU7QUFBRUMsTUFBQUEsT0FBTyxFQUFFLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBQVg7QUFBaUNDLE1BQUFBLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBRCxFQUFTLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBVCxFQUFpQixDQUFDLENBQUQsRUFBSSxDQUFKLENBQWpCO0FBQXpDLEtBRHNFLEVBRXRFO0FBQUVELE1BQUFBLE9BQU8sRUFBRSxRQUFRRSxLQUFSLENBQWMsRUFBZCxDQUFYO0FBQWlDRCxNQUFBQSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEdBQUQsRUFBTSxDQUFOLENBQUQsRUFBVyxDQUFDLEdBQUQsRUFBTSxDQUFOLENBQVgsRUFBcUIsQ0FBQyxHQUFELEVBQU0sQ0FBTixDQUFyQjtBQUF6QyxLQUZzRSxDQUExRTs7QUFNQUwsSUFBQUEsQ0FBQyxDQUFDTyxJQUFGLENBQU9KLFFBQVAsRUFBa0JLLENBQUQsSUFBTztBQUNwQixZQUFNQyxHQUFHLEdBQUdWLGlCQUFpQixDQUFDUyxDQUFDLENBQUNKLE9BQUgsQ0FBN0I7QUFDQUMsTUFBQUEsTUFBTSxDQUFDSSxHQUFELENBQU4sQ0FBWUMsT0FBWixDQUFvQkYsQ0FBQyxDQUFDSCxNQUF0QjtBQUNBTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWjtBQUNILEtBSkQ7QUFLSCxHQVpDLENBQUY7QUFjQVAsRUFBQUEsRUFBRSxDQUFDLHNDQUFELEVBQXlDLE1BQU07QUFDN0MsVUFBTUMsUUFBcUYsR0FBRyxDQUMxRjtBQUFFQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBWDtBQUFpQ0MsTUFBQUEsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFELEVBQU0sQ0FBTixDQUFELEVBQVcsQ0FBQyxHQUFELEVBQU0sQ0FBTixDQUFYLENBQXpDO0FBQStEUSxNQUFBQSxDQUFDLEVBQUVDLElBQUksQ0FBQ0M7QUFBdkUsS0FEMEYsQ0FBOUY7O0FBS0FmLElBQUFBLENBQUMsQ0FBQ08sSUFBRixDQUFPSixRQUFQLEVBQWtCSyxDQUFELElBQU87QUFDcEIsWUFBTUMsR0FBRyxHQUFHVixpQkFBaUIsQ0FBQ1MsQ0FBQyxDQUFDSixPQUFILEVBQVlJLENBQUMsQ0FBQ0ssQ0FBZCxDQUE3QjtBQUNBUixNQUFBQSxNQUFNLENBQUNJLEdBQUQsQ0FBTixDQUFZQyxPQUFaLENBQW9CRixDQUFDLENBQUNILE1BQXRCO0FBQ0FNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFaO0FBQ0gsS0FKRDtBQUtILEdBWEMsQ0FBRjtBQWFILENBN0JPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qIHRzbGludDpkaXNhYmxlOiBuby1jb25zb2xlICovXG5cbmltcG9ydCB7IHNvcnRlZFVuaXFDb3VudEJ5IH0gZnJvbSAnLi9Mb2Rhc2hQbHVzJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuZGVzY3JpYmUoXCJTb3J0ZWQgVW5pcSBDb3VudGluZ1wiLCAoKSA9PiB7XG5cbiAgICBpdChcInNob3VsZCBjb3VudC91bmlxIGJ5IGlkZW50aXR5XCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgZXhhbXBsZXM6IEFycmF5PHsgZXhhbXBsZTogYW55W10sIGV4cGVjdDogQXJyYXk8W2FueSwgbnVtYmVyXT4gfT4gPSBbXG4gICAgICAgICAgICB7IGV4YW1wbGU6IFswLCAxLCAyXSwgICAgICAgICAgICBleHBlY3Q6IFtbMCwgMV0sIFsxLCAxXSwgWzIsIDFdXSB9LFxuICAgICAgICAgICAgeyBleGFtcGxlOiBcImFhYmJjXCIuc3BsaXQoXCJcIiksICAgIGV4cGVjdDogW1tcImFcIiwgMl0sIFtcImJcIiwgMl0sIFtcImNcIiwgMV1dIH1cbiAgICAgICAgXTtcblxuXG4gICAgICAgIF8uZWFjaChleGFtcGxlcywgKGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IHNvcnRlZFVuaXFDb3VudEJ5KGUuZXhhbXBsZSk7XG4gICAgICAgICAgICBleHBlY3QocmVzKS50b0VxdWFsKGUuZXhwZWN0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaXQoXCJzaG91bGQgY291bnQvdW5pcSBieSBjdXN0b20gZnVuY3Rpb25cIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCBleGFtcGxlczogQXJyYXk8eyBleGFtcGxlOiBhbnlbXSwgZXhwZWN0OiBBcnJheTxbYW55LCBudW1iZXJdPiAsIGY6IChhOiBhbnkpID0+IGFueX0+ID0gW1xuICAgICAgICAgICAgeyBleGFtcGxlOiBbMS4xLCAxLjIsIDIuMywgMi40XSwgZXhwZWN0OiBbWzEuMSwgMl0sIFsyLjMsIDJdXSwgZjogTWF0aC5mbG9vciB9XG4gICAgICAgIF07XG5cblxuICAgICAgICBfLmVhY2goZXhhbXBsZXMsIChlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBzb3J0ZWRVbmlxQ291bnRCeShlLmV4YW1wbGUsIGUuZik7XG4gICAgICAgICAgICBleHBlY3QocmVzKS50b0VxdWFsKGUuZXhwZWN0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG59KTtcbiJdfQ==